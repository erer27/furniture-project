/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 BP_Martin_C.glb 
*/

import React, { useEffect, useRef } from "react";
import { useCamera, useGLTF } from "@react-three/drei";
import { furnitureInfo } from "./FurnitureInfo";
import * as THREE from "three";
import { Vector3 } from "three";

type furnitureProps = { furnitureInfo: furnitureInfo };

export default function Furniture({ furnitureInfo }: furnitureProps) {
  const obj = useRef<any>();

  // add event listener to highlight dragged objects
  const position = new Vector3(
    furnitureInfo.position[0],
    furnitureInfo.position[2],
    furnitureInfo.position[1]
  );

  const { nodes, materials } = useGLTF(`./furnitures/${furnitureInfo.file}`);
  const meshs = Object.values(nodes).filter((mesh) => mesh.type === "Mesh");
  useEffect(() => {
    console.log(nodes);
  }, []);
  return (
    <group dispose={null} ref={obj} position={position}>
      {meshs.map((mesh: any) => (
        <mesh
          key={mesh.uuid}
          geometry={mesh.geometry}
          material={mesh.material}
        />
      ))}
    </group>
  );
}

// useGLTF.preload("./BP_Martin_C.glb");
